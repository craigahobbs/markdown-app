# Licensed under the MIT License
# https://github.com/craigahobbs/markdown-up/blob/main/LICENSE

include '../pager.mds'


# Test page function
function testPagerModel_page2():
endfunction


# Test page function #2
function testPagerModel_page4():
endfunction


# Test pager model
testPagerModel = objectNew( \
    'pages', arrayNew( \
        objectNew('name', 'Page 1', 'type', objectNew('markdown', objectNew( \
            'url', 'README.md'))), \
        objectNew('name', 'Page2', 'type', objectNew('function', objectNew( \
            'function', testPagerModel_page2, 'title', 'Page 2'))), \
        objectNew('name', 'Page3', 'type', objectNew('link', objectNew( \
            'url', '#url=other.md'))), \
        objectNew('name', 'Page4', 'type', objectNew('function', objectNew( \
            'function', testPagerModel_page4, 'title', 'Page 4', 'hidden', true))) \
    ) \
)


async function testPagerSentinel():
    unittestEqual(systemGlobalGet('pagerSentinel'), true)
    systemGlobalSet('pagerSentinel', 1)
    include '../pager.mds'
    unittestEqual(systemGlobalGet('pagerSentinel'), 1)
endfunction
unittestRunTestAsync('testPagerSentinel')


async function testPagerNoArguments():
    unittestMockAll(objectNew( \
        'markdownParse', arrayNew(objectNew('parts', arrayNew())), \
        'markdownTitle', arrayNew('The Title'), \
        'systemFetch', objectNew( \
            'README.md', 'Hello!' \
        ) \
    ))

    pagerMain(testPagerModel)

    unittestDeepEqual( \
        unittestMockEnd(), \
        arrayNew( \
            arrayNew('markdownPrint', arrayNew('Page&nbsp;1&nbsp;|')), \
            arrayNew('markdownPrint', arrayNew("[Page2](#var.vPage='Page2')&nbsp;|")), \
            arrayNew('markdownPrint', arrayNew('[Page3](#url=other.md)')), \
            arrayNew('markdownPrint', arrayNew( \
                '', \
                '(&nbsp;[Start](#var=)&nbsp;|', \
                'Previous&nbsp;|', \
                "[Next](#var.vPage='Page2')&nbsp;)" \
            )), \
            arrayNew('systemFetch', arrayNew('README.md', null, true)), \
            arrayNew('markdownParse', arrayNew('Hello!')), \
            arrayNew('markdownTitle', arrayNew(objectNew('parts', arrayNew()))), \
            arrayNew('documentSetTitle', arrayNew('The Title')), \
            arrayNew('markdownPrint', arrayNew('', 'Hello!')) \
        ) \
    )
endfunction
unittestRunTestAsync('testPagerNoArguments')


async function testPagerArguments():
    unittestMockAll(objectNew( \
        'markdownParse', arrayNew(objectNew('parts', arrayNew())), \
        'markdownTitle', arrayNew('The Title'), \
        'systemFetch', objectNew( \
            'README.md', 'Hello!' \
        ) \
    ))

    # Set argument Globals
    systemGlobalSet('vName', 'testName')

    arguments = argsValidate(arrayNew( \
        objectNew('name', 'page', 'default', 'Page 1'), \
        objectNew('name', 'name') \
    ))
    pagerMain(testPagerModel, objectNew('arguments', arguments))

    unittestDeepEqual( \
        unittestMockEnd(), \
        arrayNew( \
            arrayNew('markdownPrint', arrayNew('Page&nbsp;1&nbsp;|')), \
            arrayNew('markdownPrint', arrayNew("[Page2](#var.vPage='Page2'&var.vName='testName')&nbsp;|")), \
            arrayNew('markdownPrint', arrayNew('[Page3](#url=other.md)')), \
            arrayNew('markdownPrint', arrayNew( \
                '', \
                "(&nbsp;[Start](#var.vName='testName')&nbsp;|", \
                'Previous&nbsp;|', \
                "[Next](#var.vPage='Page2'&var.vName='testName')&nbsp;)" \
            )), \
            arrayNew('systemFetch', arrayNew('README.md', null, true)), \
            arrayNew('markdownParse', arrayNew('Hello!')), \
            arrayNew('markdownTitle', arrayNew(objectNew('parts', arrayNew()))), \
            arrayNew('documentSetTitle', arrayNew('The Title')), \
            arrayNew('markdownPrint', arrayNew('', 'Hello!')) \
        ) \
    )

    # Clear argument globals
    systemGlobalSet('vName', null)
endfunction
unittestRunTestAsync('testPagerArguments')
